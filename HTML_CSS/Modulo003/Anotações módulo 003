# Anotações do módulo 003
- [Playlist - YT](https://www.youtube.com/playlist?list=PLHz_AreHm4dmcAviDwiGgHbeEJToxbOpZ)
- [Material em PDFs](https://github.com/gustavoguanabara/html-css/tree/master/aulas-pdf)
- https://gustavoguanabara.github.io

## Git e GitHub
> As anotações do curso de Git e GitHub estão em outra pasta nesse mesmo repositório. [Clique aqui para ser redirecionado](https://github.com/augusto404/estudos/blob/main/Git_GitHub/Git_GitHub.md)

## Imagens
### Configurando a posição da imagem no fundo do site
As imagens são posicionadas baseando-se no tamanho em pixels da imagem usada como background. Se uma imagem for 1980x720 e a div for 200x200, a div irá usar como fundo a parte cortada de 200x200 de dentro da imagem. O posicionamento desse "corte" será, por padrão, no canto superior esquerdo dentro de um elemento. Para mudar a posição, use a propriedade `background-position:` **eixo x** *eixo y* `;`.

### Mudando o tamanho da imagem de fundo do site
Não é obrigatório, mas definir uma cor de fundo do elemento mesmo que vá colocar um baclground depois é algo bom de fazer. Os sites carregam, inicialmente, o conteúdo textual, e, só depois, as imagens.

### Background
Ao definir uma imagem como background, use `background-size: cover;` para que sempre fique adaptada independente da viewport.

A função de `background-attachment:` é usada para definir o vínculo do fundo em relação ao tamanho da página. Os parâmetros que podem ser dados são: `fixed` (fixo independente da rolagem do conteúdo) e `scroll` (rola o fundo junto com a rolagem do conteúdo.).

Na declaração de parâmetros da propriedade `background` pode ser usada uma **shorthand** na seguinte ordem: *color > image > position > size > repeat > attachment*.

```css
    background: white url("") center center / cover no-repeat scroll;
    /* A declaração do size deve vir depois de position, sendo os dois parâmetros separados por uma barra. */
```
## Centralização vertical de caixas
Para mover verticalmente e horizontalmente um elemento de maneira simultânea, use as seguintes especificações:
[Vídeo - Centralização vertical de caixas](https://youtu.be/-w0Qo_qQiRg)

> A alternativa mais prática é a utilização de flexboxes.

## Tabelas
No HTML4 os sites eram construídos usando tabelas, a partir do HTML5 foram adicionadas ferramentas de contrução de sites mais eficiêntes e semânticas. **Não crie a estrutura dos seus sites com tabelas. Use elas apenas para o seu propósito, exibição de dados.**

### Hierarquia simples
```css
<table> /* tabela */
    <tr> /* (table row) = linha de tabela */
        <th> /* (table header) = título de tabela */
        <td> /* (table data) = dado de tabela */
```

### Hierarquia avançada (Para tabelas grandes)
A anatomia de tabelas grandes se baseia em tags semânticas.

```css
<table>
    <caption> /* legenda da tabela */
    <thead> /* (table head) cabeçalho da tabela */
        <tr>
            <th>
            <td>
    <tbody> /* (table body) corpo da tabela */
        <tr>
            <th>
            <td>
    <tfoot> /* (table footer) rodapé da tabela */
        <tr>
            <th>
            <td>
```

### Estilização de tabelas
- **Bordas**: As bordas podem ser apenas externas quando usados os seletores CSS na tag table. Se quiser bordas internas e externas, use os seletor na tag td.
- `border-collapse: collapse;` = Junta as linhas internas da tabela.
- **Alinhamento**: Há dois tipos de alinhamentos, `text-align:;` para alinhamento horizontal e `vertical-align: middle;` para alinhamento vertical. Os dois ajudam a centralizar o conteúdo das células da tabela.
- **Efeito zebrado**: Para adicionar o efeito de linhas de cores alternadas, use a _pseudo-classe_ `:nth-child(2n)`.
    > O efeito zebrado é aconselhado para tabelas que contém muitas colunas.
    
    > Essa _pseudo-classe_ seleciona tags especificadas de forma repetitiva, ou pode ser usada para aplicar um estilo em uma tag de um conjunto sem precisar do uso de classes.

    > Também pode ser usado a especificação `odd` para selecionar números impáres, ou `even` para números pares, por exemplo. Recomendo ver a documentação com os exemplos de utilização dessa _pseudo-classe_.

    - Intercalando cores:
        ```css
        tbody > tr:nth-child(odd) {
            background-color: lightblue;
        }

        tbody > tr:nth-child(even) {
            background-color: lightgray;
        }
        ```
- **Cabeçalho fixo**: Defina o posicionamento da tabela para relativo, crie um seletor para o cabeçalho e defina os seguintes parâmetros:
    ```css
        /* Definindo o caminho do cabeçalho. */
        thead > tr > th { 
            
            /* Fixando o cabeçalho. */
            position: sticky;

            /* O navegador pode apresentar uma margem de um pixel de distância do topo se for definido o valor zero, então é aconselhavel utilizar o valor de um pixel negativo. */
            top: -1px;

            /* Use a mesma cor do background do cabeçalho. */
            background-color: darkslategray;
        }
    ```
- **Mesclagem de células**: A mesclagem de células acontece por expansão de colunas. Use a propriedade ´colspan="NUMERO"´ dentro da tag `<td>` com a quantidade de células que queira mesclar. Ex: `<td colspan="2">dado</td>`.
    > Isso não é CSS, esse é uma característica interna de tabelas.
    
    > Para fazer a **expansão de células por coluna** use `rowspan`.

### Escopo
O escopo ajuda o HTML entender a distribuição de dados de forma semântica na sua tabela. Para definir os escopos de uma tabela, use `scope=""` na tag `<th>`, indicando em que direção estão dispostos os dados. **Os tipos básicos são `scope="col"` e `scope="row"`.**

Quando há uma célula mesclada em colunas e linhas, ela abrange um grupo de colunas ou linhas. Nesse caso, a definição é feita como a de um grupo. Para a definição do escopo de grupos de colunas ou linhas, utiliza-se `scope="colgroup"` ou `scope="rowgroup"` na tag `<th>`.

---
# Anotações extras
## Atalhos
- `div.quadrado*3` = Cria três `divs` com a classe "quadrado".
- `text-transform: uppercase;` = Transforma o texto em letra maiúscula.
    - `font-variant: small-caps;` = Deixa as letras maiúsculas destacadas no texto.
- Ao usar hover, especificar as tags de forma separada.
    ```css
        header a:hover, footer a:hover {
        ...
    }
    ```
- Dê preferência a unidades de medidas responsivas, como é o caso da `vh` (view height) e `vw`(view width) que pode substituir a porcentagem fixa.